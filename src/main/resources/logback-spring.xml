<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

	<include resource="org/springframework/boot/logging/logback/defaults.xml" />

	<springProfile name="default | local | local_n2m | dev | dev_n2m">
    	<property resource="application.yml"/>
    </springProfile>
    
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] %logger{39} : %m%n</pattern>
		</encoder>
	</appender>

	<appender name="FILE_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logging.base.dir}/ipe.log</file>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] %logger{39} : %m%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${logging.base.dir}/ipe-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<maxFileSize>1GB</maxFileSize>
			<maxHistory>30</maxHistory>
			<totalSizeCap>50GB</totalSizeCap>
		</rollingPolicy>
	</appender>

	<appender name="ERROR_FILE_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logging.base.dir}/error/ipe-error.log</file>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] %logger{39} : %m%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${logging.base.dir}/error/ipe-error-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<maxFileSize>1GB</maxFileSize>
			<maxHistory>30</maxHistory>
			<totalSizeCap>50GB</totalSizeCap>
		</rollingPolicy>
	</appender>


	<appender name="ASYNC_FILE_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<appender-ref ref="FILE_APPENDER" />
	</appender>

	<appender name="ASYNC_ERROR_FILE_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<appender-ref ref="ERROR_FILE_APPENDER" />
	</appender>

	<!-- log4jdbc 옵션 설정 -->
	<logger name="jdbc" level="OFF"/>
	<!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
	<logger name="jdbc.connection" level="OFF"/>
	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
	<logger name="jdbc.sqlonly" level="OFF"/>
	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming" level="OFF"/>
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
	<logger name="jdbc.audit" level="OFF"/>
	<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
	<logger name="jdbc.resultset" level="OFF"/>
	<!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
	<logger name="jdbc.resultsettable" level="OFF"/>

	<springProfile name="default | local | local_n2m">
        <logger name="jdbc.sqltiming" level="DEBUG" />
        <logger name="jdbc.resultsettable" level="DEBUG" />
        <logger name="org.apache.http" level="DEBUG" />
        <logger name="kr.re.keti.sc.ipe" level="DEBUG" />
        <root level="INFO">
			<!--
            <appender-ref ref="ASYNC_FILE_APPENDER" />
			 -->
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>

    <springProfile name="dev | dev_n2m">
        <logger name="jdbc.sqltiming" level="DEBUG" />
        <logger name="jdbc.resultsettable" level="DEBUG" />
        <logger name="org.apache.http" level="DEBUG" />
        <logger name="kr.re.keti.sc.ipe" level="DEBUG" />
        <root level="INFO">
            <appender-ref ref="ASYNC_FILE_APPENDER" />
        </root>
    </springProfile>

</configuration>